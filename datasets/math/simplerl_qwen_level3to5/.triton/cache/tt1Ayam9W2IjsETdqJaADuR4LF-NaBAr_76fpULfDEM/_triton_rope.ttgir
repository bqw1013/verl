#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [2, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [4, 8], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:89", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @_triton_rope(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0), %arg1: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":7:0)) attributes {noinline = false} {
    %cst = arith.constant dense<64> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<64> : tensor<2x64xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<16x64xbf16, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<2x64xbf16, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<64xbf16, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<64xbf16, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<16x64xi32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<2> : tensor<2x1xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<12> : tensor<16x1xi32, #blocked1> loc(#loc1)
    %cst_9 = arith.constant dense<128> : tensor<2x1xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<128> : tensor<16x1xi32, #blocked1> loc(#loc1)
    %cst_11 = arith.constant dense<64> : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc1)
    %cst_12 = arith.constant dense<64> : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %arg1 : i32 loc(#loc3)
    %2 = tt.addptr %arg0, %1 : !tt.ptr<bf16>, i32 loc(#loc4)
    %3 = arith.muli %0, %arg3 : i32 loc(#loc5)
    %4 = tt.addptr %arg2, %3 : !tt.ptr<bf16>, i32 loc(#loc6)
    %5 = arith.remsi %0, %arg8 : i32 loc(#loc7)
    %6 = arith.muli %5, %arg5 : i32 loc(#loc8)
    %7 = tt.addptr %arg4, %6 : !tt.ptr<bf16>, i32 loc(#loc9)
    %8 = arith.muli %5, %arg7 : i32 loc(#loc10)
    %9 = tt.addptr %arg6, %8 : !tt.ptr<bf16>, i32 loc(#loc11)
    %10 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc12)
    %11 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc12)
    %12 = arith.cmpi slt, %10, %cst_11 : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc13)
    %13 = arith.cmpi slt, %11, %cst_12 : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc13)
    %14 = tt.splat %7 : !tt.ptr<bf16> -> tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc14)
    %15 = tt.splat %7 : !tt.ptr<bf16> -> tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc14)
    %16 = tt.addptr %14, %10 : tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked1}>>, tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc14)
    %17 = tt.addptr %15, %11 : tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked}>>, tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc14)
    %18 = tt.load %16, %12, %cst_3 : tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc15)
    %19 = tt.load %17, %13, %cst_4 : tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc15)
    %20 = tt.splat %9 : !tt.ptr<bf16> -> tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc16)
    %21 = tt.splat %9 : !tt.ptr<bf16> -> tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc16)
    %22 = tt.addptr %20, %10 : tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked1}>>, tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc16)
    %23 = tt.addptr %21, %11 : tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked}>>, tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc16)
    %24 = tt.load %22, %12, %cst_3 : tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc17)
    %25 = tt.load %23, %13, %cst_4 : tensor<64x!tt.ptr<bf16>, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc17)
    %26 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc18)
    %27 = tt.expand_dims %26 {axis = 1 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<16x1xi32, #blocked1> loc(#loc18)
    %28 = arith.muli %27, %cst_10 : tensor<16x1xi32, #blocked1> loc(#loc19)
    %29 = tt.expand_dims %10 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi32, #blocked1> loc(#loc20)
    %30 = tt.expand_dims %11 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc20)
    %31 = tt.broadcast %28 : tensor<16x1xi32, #blocked1> -> tensor<16x64xi32, #blocked1> loc(#loc21)
    %32 = tt.broadcast %29 : tensor<1x64xi32, #blocked1> -> tensor<16x64xi32, #blocked1> loc(#loc21)
    %33 = arith.addi %31, %32 : tensor<16x64xi32, #blocked1> loc(#loc21)
    %34 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc22)
    %35 = tt.expand_dims %34 {axis = 1 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<2x1xi32, #blocked> loc(#loc22)
    %36 = arith.muli %35, %cst_9 : tensor<2x1xi32, #blocked> loc(#loc23)
    %37 = tt.broadcast %36 : tensor<2x1xi32, #blocked> -> tensor<2x64xi32, #blocked> loc(#loc24)
    %38 = tt.broadcast %30 : tensor<1x64xi32, #blocked> -> tensor<2x64xi32, #blocked> loc(#loc24)
    %39 = arith.addi %37, %38 : tensor<2x64xi32, #blocked> loc(#loc24)
    %40 = arith.cmpi slt, %27, %cst_8 : tensor<16x1xi32, #blocked1> loc(#loc25)
    %41 = arith.cmpi slt, %29, %cst_7 : tensor<1x64xi32, #blocked1> loc(#loc26)
    %42 = arith.cmpi slt, %30, %cst : tensor<1x64xi32, #blocked> loc(#loc26)
    %43 = tt.broadcast %40 : tensor<16x1xi1, #blocked1> -> tensor<16x64xi1, #blocked1> loc(#loc27)
    %44 = tt.broadcast %41 : tensor<1x64xi1, #blocked1> -> tensor<16x64xi1, #blocked1> loc(#loc27)
    %45 = arith.andi %43, %44 : tensor<16x64xi1, #blocked1> loc(#loc27)
    %46 = arith.cmpi slt, %35, %cst_6 : tensor<2x1xi32, #blocked> loc(#loc28)
    %47 = tt.broadcast %46 : tensor<2x1xi1, #blocked> -> tensor<2x64xi1, #blocked> loc(#loc29)
    %48 = tt.broadcast %42 : tensor<1x64xi1, #blocked> -> tensor<2x64xi1, #blocked> loc(#loc29)
    %49 = arith.andi %47, %48 : tensor<2x64xi1, #blocked> loc(#loc29)
    %50 = tt.splat %2 : !tt.ptr<bf16> -> tensor<16x64x!tt.ptr<bf16>, #blocked1> loc(#loc30)
    %51 = tt.addptr %50, %33 : tensor<16x64x!tt.ptr<bf16>, #blocked1>, tensor<16x64xi32, #blocked1> loc(#loc30)
    %52 = tt.load %51, %45, %cst_1 : tensor<16x64x!tt.ptr<bf16>, #blocked1> loc(#loc31)
    %53 = tt.splat %4 : !tt.ptr<bf16> -> tensor<2x64x!tt.ptr<bf16>, #blocked> loc(#loc32)
    %54 = tt.addptr %53, %39 : tensor<2x64x!tt.ptr<bf16>, #blocked>, tensor<2x64xi32, #blocked> loc(#loc32)
    %55 = tt.load %54, %49, %cst_2 : tensor<2x64x!tt.ptr<bf16>, #blocked> loc(#loc33)
    %56 = arith.addi %33, %cst_5 : tensor<16x64xi32, #blocked1> loc(#loc34)
    %57 = arith.addi %39, %cst_0 : tensor<2x64xi32, #blocked> loc(#loc35)
    %58 = tt.addptr %50, %56 : tensor<16x64x!tt.ptr<bf16>, #blocked1>, tensor<16x64xi32, #blocked1> loc(#loc36)
    %59 = tt.load %58, %45, %cst_1 : tensor<16x64x!tt.ptr<bf16>, #blocked1> loc(#loc37)
    %60 = tt.addptr %53, %57 : tensor<2x64x!tt.ptr<bf16>, #blocked>, tensor<2x64xi32, #blocked> loc(#loc38)
    %61 = tt.load %60, %49, %cst_2 : tensor<2x64x!tt.ptr<bf16>, #blocked> loc(#loc39)
    %62 = tt.expand_dims %18 {axis = 0 : i32} : tensor<64xbf16, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xbf16, #blocked1> loc(#loc40)
    %63 = tt.expand_dims %19 {axis = 0 : i32} : tensor<64xbf16, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xbf16, #blocked> loc(#loc40)
    %64 = tt.broadcast %62 : tensor<1x64xbf16, #blocked1> -> tensor<16x64xbf16, #blocked1> loc(#loc40)
    %65 = arith.mulf %52, %64 : tensor<16x64xbf16, #blocked1> loc(#loc40)
    %66 = tt.expand_dims %24 {axis = 0 : i32} : tensor<64xbf16, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xbf16, #blocked1> loc(#loc41)
    %67 = tt.expand_dims %25 {axis = 0 : i32} : tensor<64xbf16, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xbf16, #blocked> loc(#loc41)
    %68 = tt.broadcast %66 : tensor<1x64xbf16, #blocked1> -> tensor<16x64xbf16, #blocked1> loc(#loc41)
    %69 = arith.mulf %59, %68 : tensor<16x64xbf16, #blocked1> loc(#loc41)
    %70 = arith.addf %65, %69 : tensor<16x64xbf16, #blocked1> loc(#loc42)
    tt.store %51, %70, %45 : tensor<16x64x!tt.ptr<bf16>, #blocked1> loc(#loc43)
    %71 = arith.mulf %59, %64 : tensor<16x64xbf16, #blocked1> loc(#loc44)
    %72 = arith.mulf %52, %68 : tensor<16x64xbf16, #blocked1> loc(#loc45)
    %73 = arith.subf %71, %72 : tensor<16x64xbf16, #blocked1> loc(#loc46)
    tt.store %58, %73, %45 : tensor<16x64x!tt.ptr<bf16>, #blocked1> loc(#loc47)
    %74 = tt.broadcast %63 : tensor<1x64xbf16, #blocked> -> tensor<2x64xbf16, #blocked> loc(#loc48)
    %75 = arith.mulf %55, %74 : tensor<2x64xbf16, #blocked> loc(#loc48)
    %76 = tt.broadcast %67 : tensor<1x64xbf16, #blocked> -> tensor<2x64xbf16, #blocked> loc(#loc49)
    %77 = arith.mulf %61, %76 : tensor<2x64xbf16, #blocked> loc(#loc49)
    %78 = arith.addf %75, %77 : tensor<2x64xbf16, #blocked> loc(#loc50)
    tt.store %54, %78, %49 : tensor<2x64x!tt.ptr<bf16>, #blocked> loc(#loc51)
    %79 = arith.mulf %61, %74 : tensor<2x64xbf16, #blocked> loc(#loc52)
    %80 = arith.mulf %55, %76 : tensor<2x64xbf16, #blocked> loc(#loc53)
    %81 = arith.subf %79, %80 : tensor<2x64xbf16, #blocked> loc(#loc54)
    tt.store %60, %81, %49 : tensor<2x64x!tt.ptr<bf16>, #blocked> loc(#loc55)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":35:24)
#loc3 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":38:26)
#loc4 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":38:20)
#loc5 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":39:26)
#loc6 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":39:20)
#loc7 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":53:24)
#loc8 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":56:22)
#loc9 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":54:16)
#loc10 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":61:22)
#loc11 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":59:16)
#loc12 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":65:31)
#loc13 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":66:29)
#loc14 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":67:28)
#loc15 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":67:22)
#loc16 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":68:28)
#loc17 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":68:22)
#loc18 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":75:50)
#loc19 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":75:61)
#loc20 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":75:92)
#loc21 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":75:66)
#loc22 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":76:50)
#loc23 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":76:61)
#loc24 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":76:66)
#loc25 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":77:54)
#loc26 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":77:100)
#loc27 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":77:63)
#loc28 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":78:54)
#loc29 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":78:63)
#loc30 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":79:31)
#loc31 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":79:23)
#loc32 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":80:31)
#loc33 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":80:23)
#loc34 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":83:52)
#loc35 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":84:52)
#loc36 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":87:31)
#loc37 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":87:23)
#loc38 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":88:31)
#loc39 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":88:23)
#loc40 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":104:34)
#loc41 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":104:55)
#loc42 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":104:44)
#loc43 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":105:47)
#loc44 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":106:34)
#loc45 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":106:55)
#loc46 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":106:44)
#loc47 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":107:48)
#loc48 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":109:34)
#loc49 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":109:55)
#loc50 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":109:44)
#loc51 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":110:47)
#loc52 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":111:34)
#loc53 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":111:55)
#loc54 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":111:44)
#loc55 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":112:48)
#loc56 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rope.py":90:4)
