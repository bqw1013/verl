#blocked = #triton_gpu.blocked<{sizePerThread = [8], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0)
#loc1 = loc(unknown)
#loc34 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:77)
#loc58 = loc(callsite(#loc1 at #loc34))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:89", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @_rms_norm_backward_kernel(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg1: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0), %arg12: f32 loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":114:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<2048xbf16, #blocked> loc(#loc1)
    %c22_i32 = arith.constant 22 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<2048xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c22_i32 : i32 loc(#loc3)
    %2 = arith.addi %0, %c1_i32 : i32 loc(#loc4)
    %3 = arith.muli %2, %c22_i32 : i32 loc(#loc5)
    %4 = arith.minsi %3, %arg10 : i32 loc(#loc6)
    %5 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #blocked> loc(#loc7)
    %6 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #blocked1> loc(#loc7)
    %7 = tt.splat %arg11 : i32 -> tensor<2048xi32, #blocked> loc(#loc8)
    %8 = tt.splat %arg11 : i32 -> tensor<2048xi32, #blocked1> loc(#loc8)
    %9 = arith.cmpi slt, %5, %7 : tensor<2048xi32, #blocked> loc(#loc8)
    %10 = arith.cmpi slt, %6, %8 : tensor<2048xi32, #blocked1> loc(#loc8)
    %11 = arith.muli %1, %arg1 : i32 loc(#loc9)
    %12 = tt.addptr %arg0, %11 : !tt.ptr<bf16>, i32 loc(#loc10)
    %13 = arith.muli %1, %arg3 : i32 loc(#loc11)
    %14 = tt.addptr %arg2, %13 : !tt.ptr<bf16>, i32 loc(#loc12)
    %15 = arith.muli %1, %arg5 : i32 loc(#loc13)
    %16 = tt.addptr %arg4, %15 : !tt.ptr<bf16>, i32 loc(#loc14)
    %17 = tt.addptr %arg7, %1 : !tt.ptr<f32>, i32 loc(#loc15)
    %18 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<2048x!tt.ptr<bf16>, #blocked> loc(#loc16)
    %19 = tt.addptr %18, %5 : tensor<2048x!tt.ptr<bf16>, #blocked>, tensor<2048xi32, #blocked> loc(#loc16)
    %20 = tt.load %19, %9, %cst : tensor<2048x!tt.ptr<bf16>, #blocked> loc(#loc17)
    %21 = arith.extf %20 : tensor<2048xbf16, #blocked> to tensor<2048xf32, #blocked> loc(#loc18)
    %22 = tt.splat %arg12 : f32 -> tensor<2048xf32, #blocked> loc(#loc18)
    %23 = arith.addf %21, %22 : tensor<2048xf32, #blocked> loc(#loc18)
    %24 = arith.sitofp %arg11 : i32 to f32 loc(#loc19)
    %25 = arith.divf %cst_1, %24 : f32 loc(#loc19)
    %26 = arith.subf %cst_0, %25 : f32 loc(#loc20)
    %27:5 = scf.for %arg13 = %1 to %4 step %c1_i32 iter_args(%arg14 = %cst_2, %arg15 = %12, %arg16 = %14, %arg17 = %16, %arg18 = %17) -> (tensor<2048xf32, #blocked>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<f32>)  : i32 {
      %33 = tt.splat %arg15 : !tt.ptr<bf16> -> tensor<2048x!tt.ptr<bf16>, #blocked> loc(#loc22)
      %34 = tt.addptr %33, %5 : tensor<2048x!tt.ptr<bf16>, #blocked>, tensor<2048xi32, #blocked> loc(#loc22)
      %35 = tt.load %34, %9, %cst : tensor<2048x!tt.ptr<bf16>, #blocked> loc(#loc23)
      %36 = tt.splat %arg17 : !tt.ptr<bf16> -> tensor<2048x!tt.ptr<bf16>, #blocked> loc(#loc24)
      %37 = tt.addptr %36, %5 : tensor<2048x!tt.ptr<bf16>, #blocked>, tensor<2048xi32, #blocked> loc(#loc24)
      %38 = tt.load %37, %9, %cst : tensor<2048x!tt.ptr<bf16>, #blocked> loc(#loc25)
      %39 = tt.load %arg18 : !tt.ptr<f32> loc(#loc26)
      %40 = arith.extf %38 : tensor<2048xbf16, #blocked> to tensor<2048xf32, #blocked> loc(#loc27)
      %41 = arith.extf %35 : tensor<2048xbf16, #blocked> to tensor<2048xf32, #blocked> loc(#loc28)
      %42 = arith.mulf %41, %23 : tensor<2048xf32, #blocked> loc(#loc28)
      %43 = tt.splat %39 : f32 -> tensor<2048xf32, #blocked> loc(#loc29)
      %44 = arith.mulf %43, %42 : tensor<2048xf32, #blocked> loc(#loc29)
      %45 = arith.mulf %26, %39 : f32 loc(#loc30)
      %46 = arith.mulf %45, %39 : f32 loc(#loc31)
      %47 = arith.mulf %42, %40 : tensor<2048xf32, #blocked> loc(#loc32)
      %48 = "tt.reduce"(%47) <{axis = 0 : i32}> ({
      ^bb0(%arg19: f32 loc(callsite(#loc1 at #loc34)), %arg20: f32 loc(callsite(#loc1 at #loc34))):
        %66 = arith.addf %arg19, %arg20 : f32 loc(#loc60)
        tt.reduce.return %66 : f32 loc(#loc57)
      }) : (tensor<2048xf32, #blocked>) -> f32 loc(#loc57)
      %49 = arith.mulf %46, %48 : f32 loc(#loc36)
      %50 = tt.splat %49 : f32 -> tensor<2048xf32, #blocked> loc(#loc37)
      %51 = arith.mulf %50, %40 : tensor<2048xf32, #blocked> loc(#loc37)
      %52 = arith.mulf %43, %51 : tensor<2048xf32, #blocked> loc(#loc38)
      %53 = arith.addf %44, %52 : tensor<2048xf32, #blocked> loc(#loc39)
      %54 = arith.mulf %40, %43 : tensor<2048xf32, #blocked> loc(#loc40)
      %55 = arith.truncf %54 : tensor<2048xf32, #blocked> to tensor<2048xbf16, #blocked> loc(#loc41)
      %56 = arith.mulf %35, %55 : tensor<2048xbf16, #blocked> loc(#loc42)
      %57 = arith.extf %56 : tensor<2048xbf16, #blocked> to tensor<2048xf32, #blocked> loc(#loc43)
      %58 = arith.addf %arg14, %57 : tensor<2048xf32, #blocked> loc(#loc43)
      %59 = tt.splat %arg16 : !tt.ptr<bf16> -> tensor<2048x!tt.ptr<bf16>, #blocked> loc(#loc44)
      %60 = tt.addptr %59, %5 : tensor<2048x!tt.ptr<bf16>, #blocked>, tensor<2048xi32, #blocked> loc(#loc44)
      %61 = arith.truncf %53 : tensor<2048xf32, #blocked> to tensor<2048xbf16, #blocked> loc(#loc45)
      tt.store %60, %61, %9 : tensor<2048x!tt.ptr<bf16>, #blocked> loc(#loc46)
      %62 = tt.addptr %arg15, %arg1 : !tt.ptr<bf16>, i32 loc(#loc47)
      %63 = tt.addptr %arg16, %arg3 : !tt.ptr<bf16>, i32 loc(#loc48)
      %64 = tt.addptr %arg17, %arg5 : !tt.ptr<bf16>, i32 loc(#loc49)
      %65 = tt.addptr %arg18, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc50)
      scf.yield %58, %62, %63, %64, %65 : tensor<2048xf32, #blocked>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<f32> loc(#loc51)
    } loc(#loc21)
    %28 = arith.muli %0, %arg9 : i32 loc(#loc52)
    %29 = tt.addptr %arg8, %28 : !tt.ptr<f32>, i32 loc(#loc53)
    %30 = tt.splat %29 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>, #blocked1> loc(#loc54)
    %31 = tt.addptr %30, %6 : tensor<2048x!tt.ptr<f32>, #blocked1>, tensor<2048xi32, #blocked1> loc(#loc54)
    %32 = triton_gpu.convert_layout %27#0 : tensor<2048xf32, #blocked> -> tensor<2048xf32, #blocked1> loc(#loc55)
    tt.store %31, %32, %10 : tensor<2048x!tt.ptr<f32>, #blocked1> loc(#loc55)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":140:33)
#loc3 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":141:31)
#loc4 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":142:34)
#loc5 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":142:39)
#loc6 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":142:57)
#loc7 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":143:31)
#loc8 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":144:25)
#loc9 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":148:26)
#loc10 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":148:14)
#loc11 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":149:26)
#loc12 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":149:14)
#loc13 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":151:25)
#loc14 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":151:13)
#loc15 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":152:16)
#loc16 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":154:28)
#loc17 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":154:20)
#loc18 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":155:20)
#loc19 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:38)
#loc20 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:34)
#loc21 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":157:30)
#loc22 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":158:34)
#loc23 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":158:25)
#loc24 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":159:32)
#loc25 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":159:24)
#loc26 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":162:27)
#loc27 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":164:25)
#loc28 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":168:26)
#loc29 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":176:28)
#loc30 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:48)
#loc31 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:59)
#loc32 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:81)
#loc33 = loc("/root/miniconda3/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc35 = loc("/root/miniconda3/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc36 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:70)
#loc37 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:98)
#loc38 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:32)
#loc39 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":178:18)
#loc40 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":182:40)
#loc41 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":182:53)
#loc42 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":182:31)
#loc43 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":182:22)
#loc44 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":187:26)
#loc45 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":187:49)
#loc46 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":187:39)
#loc47 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":189:18)
#loc48 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":190:18)
#loc49 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":191:17)
#loc50 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":192:20)
#loc51 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":192:8)
#loc52 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":194:37)
#loc53 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":194:22)
#loc54 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":194:53)
#loc55 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":194:66)
#loc56 = loc("/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/rms_norm.py":194:4)
#loc57 = loc(callsite(#loc33 at #loc34))
#loc59 = loc(callsite(#loc35 at #loc33))
#loc60 = loc(callsite(#loc59 at #loc34))
