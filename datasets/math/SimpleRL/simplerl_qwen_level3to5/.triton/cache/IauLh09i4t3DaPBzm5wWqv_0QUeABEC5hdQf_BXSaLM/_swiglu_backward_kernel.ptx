//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	_swiglu_backward_kernel // -- Begin function _swiglu_backward_kernel
                                        // @_swiglu_backward_kernel
.visible .entry _swiglu_backward_kernel(
	.param .u64 .ptr .global .align 1 _swiglu_backward_kernel_param_0,
	.param .u64 .ptr .global .align 1 _swiglu_backward_kernel_param_1,
	.param .u64 .ptr .global .align 1 _swiglu_backward_kernel_param_2,
	.param .u32 _swiglu_backward_kernel_param_3
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<69>;
	.reg .b16 	%rs<321>;
	.reg .b32 	%r<471>;
	.reg .f32 	%f<451>;
	.reg .b64 	%rd<30>;
	.loc	1 34 0                          // swiglu.py:34:0
$L__func_begin0:
	.loc	1 34 0                          // swiglu.py:34:0

// %bb.0:
	ld.param.u64 	%rd21, [_swiglu_backward_kernel_param_0];
	ld.param.u64 	%rd22, [_swiglu_backward_kernel_param_1];
$L__tmp0:
	.loc	1 35 31                         // swiglu.py:35:31
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd23, [_swiglu_backward_kernel_param_2];
	ld.param.u32 	%r386, [_swiglu_backward_kernel_param_3];
	.loc	1 38 27                         // swiglu.py:38:27
	mul.wide.s32 	%rd24, %r1, %r386;
	.loc	1 38 14                         // swiglu.py:38:14
	shl.b64 	%rd25, %rd24, 1;
	add.s64 	%rd26, %rd21, %rd25;
	.loc	1 39 13                         // swiglu.py:39:13
	add.s64 	%rd27, %rd22, %rd25;
	.loc	1 40 13                         // swiglu.py:40:13
	add.s64 	%rd28, %rd23, %rd25;
	.loc	1 42 31                         // swiglu.py:42:31
	mov.u32 	%r387, %tid.x;
	shl.b32 	%r388, %r387, 3;
	and.b32  	%r389, %r388, 4088;
	or.b32  	%r390, %r389, 8192;
	.loc	1 43 25                         // swiglu.py:43:25
	setp.lt.u32 	%p11, %r390, 8960;
	.loc	1 45 30                         // swiglu.py:45:30
	mul.wide.u32 	%rd29, %r389, 2;
	add.s64 	%rd1, %rd26, %rd29;
	add.s64 	%rd2, %rd1, 8192;
	add.s64 	%rd3, %rd1, 16384;
	add.s64 	%rd4, %rd1, 24576;
	mov.b32 	%r6, 0;
	mov.pred 	%p1, -1;
	.loc	1 45 21                         // swiglu.py:45:21
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	{%rs161, %rs162}, %r2;
	mov.b32 	{%rs163, %rs164}, %r3;
	mov.b32 	{%rs165, %rs166}, %r4;
	mov.b32 	{%rs167, %rs168}, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	{%rs169, %rs170}, %r10;
	mov.b32 	{%rs171, %rs172}, %r11;
	mov.b32 	{%rs173, %rs174}, %r12;
	mov.b32 	{%rs175, %rs176}, %r13;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p11 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r18, %r6;
	@!%p11 mov.u32 %r19, %r6;
	@!%p11 mov.u32 %r20, %r6;
	@!%p11 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	{%rs177, %rs178}, %r18;
	mov.b32 	{%rs179, %rs180}, %r19;
	mov.b32 	{%rs181, %rs182}, %r20;
	mov.b32 	{%rs183, %rs184}, %r21;
	mov.pred 	%p16, 0;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p16 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p16 mov.u32 %r26, %r6;
	@!%p16 mov.u32 %r27, %r6;
	@!%p16 mov.u32 %r28, %r6;
	@!%p16 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	{%rs185, %rs186}, %r26;
	mov.b32 	{%rs187, %rs188}, %r27;
	mov.b32 	{%rs189, %rs190}, %r28;
	mov.b32 	{%rs191, %rs192}, %r29;
	.loc	1 47 28                         // swiglu.py:47:28
	add.s64 	%rd5, %rd27, %rd29;
	add.s64 	%rd6, %rd5, 8192;
	add.s64 	%rd7, %rd5, 16384;
	add.s64 	%rd8, %rd5, 24576;
	.loc	1 47 20                         // swiglu.py:47:20
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r34, %r6;
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r36, %r6;
	@!%p1 mov.u32 %r37, %r6;
	// end inline asm
	mov.b32 	{%rs193, %rs194}, %r34;
	mov.b32 	{%rs195, %rs196}, %r35;
	mov.b32 	{%rs197, %rs198}, %r36;
	mov.b32 	{%rs199, %rs200}, %r37;
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p1 ld.global.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r42, %r6;
	@!%p1 mov.u32 %r43, %r6;
	@!%p1 mov.u32 %r44, %r6;
	@!%p1 mov.u32 %r45, %r6;
	// end inline asm
	mov.b32 	{%rs201, %rs202}, %r42;
	mov.b32 	{%rs203, %rs204}, %r43;
	mov.b32 	{%rs205, %rs206}, %r44;
	mov.b32 	{%rs207, %rs208}, %r45;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	@%p11 ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd7 + 0 ];
	@!%p11 mov.u32 %r50, %r6;
	@!%p11 mov.u32 %r51, %r6;
	@!%p11 mov.u32 %r52, %r6;
	@!%p11 mov.u32 %r53, %r6;
	// end inline asm
	mov.b32 	{%rs209, %rs210}, %r50;
	mov.b32 	{%rs211, %rs212}, %r51;
	mov.b32 	{%rs213, %rs214}, %r52;
	mov.b32 	{%rs215, %rs216}, %r53;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p16 ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd8 + 0 ];
	@!%p16 mov.u32 %r58, %r6;
	@!%p16 mov.u32 %r59, %r6;
	@!%p16 mov.u32 %r60, %r6;
	@!%p16 mov.u32 %r61, %r6;
	// end inline asm
	mov.b32 	{%rs217, %rs218}, %r58;
	mov.b32 	{%rs219, %rs220}, %r59;
	mov.b32 	{%rs221, %rs222}, %r60;
	mov.b32 	{%rs223, %rs224}, %r61;
	.loc	1 47 64                         // swiglu.py:47:64
	// begin inline asm
	cvt.f32.bf16 %r66, %rs193;
	// end inline asm
	mov.b32 	%f65, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs194;
	// end inline asm
	mov.b32 	%f66, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs195;
	// end inline asm
	mov.b32 	%f67, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs196;
	// end inline asm
	mov.b32 	%f68, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs197;
	// end inline asm
	mov.b32 	%f69, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs198;
	// end inline asm
	mov.b32 	%f70, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs199;
	// end inline asm
	mov.b32 	%f71, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs200;
	// end inline asm
	mov.b32 	%f72, %r73;
	// begin inline asm
	cvt.f32.bf16 %r74, %rs201;
	// end inline asm
	mov.b32 	%f73, %r74;
	// begin inline asm
	cvt.f32.bf16 %r75, %rs202;
	// end inline asm
	mov.b32 	%f74, %r75;
	// begin inline asm
	cvt.f32.bf16 %r76, %rs203;
	// end inline asm
	mov.b32 	%f75, %r76;
	// begin inline asm
	cvt.f32.bf16 %r77, %rs204;
	// end inline asm
	mov.b32 	%f76, %r77;
	// begin inline asm
	cvt.f32.bf16 %r78, %rs205;
	// end inline asm
	mov.b32 	%f77, %r78;
	// begin inline asm
	cvt.f32.bf16 %r79, %rs206;
	// end inline asm
	mov.b32 	%f78, %r79;
	// begin inline asm
	cvt.f32.bf16 %r80, %rs207;
	// end inline asm
	mov.b32 	%f79, %r80;
	// begin inline asm
	cvt.f32.bf16 %r81, %rs208;
	// end inline asm
	mov.b32 	%f80, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs209;
	// end inline asm
	mov.b32 	%f81, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs210;
	// end inline asm
	mov.b32 	%f82, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs211;
	// end inline asm
	mov.b32 	%f83, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs212;
	// end inline asm
	mov.b32 	%f84, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs213;
	// end inline asm
	mov.b32 	%f85, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs214;
	// end inline asm
	mov.b32 	%f86, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs215;
	// end inline asm
	mov.b32 	%f87, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs216;
	// end inline asm
	mov.b32 	%f88, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs217;
	// end inline asm
	mov.b32 	%f89, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs218;
	// end inline asm
	mov.b32 	%f90, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs219;
	// end inline asm
	mov.b32 	%f91, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs220;
	// end inline asm
	mov.b32 	%f92, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs221;
	// end inline asm
	mov.b32 	%f93, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs222;
	// end inline asm
	mov.b32 	%f94, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs223;
	// end inline asm
	mov.b32 	%f95, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs224;
	// end inline asm
	mov.b32 	%f96, %r97;
	.loc	1 48 28                         // swiglu.py:48:28
	add.s64 	%rd9, %rd28, %rd29;
	add.s64 	%rd10, %rd9, 8192;
	add.s64 	%rd11, %rd9, 16384;
	add.s64 	%rd12, %rd9, 24576;
	.loc	1 48 20                         // swiglu.py:48:20
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	@%p1 ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r98, %r6;
	@!%p1 mov.u32 %r99, %r6;
	@!%p1 mov.u32 %r100, %r6;
	@!%p1 mov.u32 %r101, %r6;
	// end inline asm
	mov.b32 	{%rs225, %rs226}, %r98;
	mov.b32 	{%rs227, %rs228}, %r99;
	mov.b32 	{%rs229, %rs230}, %r100;
	mov.b32 	{%rs231, %rs232}, %r101;
	// begin inline asm
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	@%p1 ld.global.v4.b32 { %r106, %r107, %r108, %r109 }, [ %rd10 + 0 ];
	@!%p1 mov.u32 %r106, %r6;
	@!%p1 mov.u32 %r107, %r6;
	@!%p1 mov.u32 %r108, %r6;
	@!%p1 mov.u32 %r109, %r6;
	// end inline asm
	mov.b32 	{%rs233, %rs234}, %r106;
	mov.b32 	{%rs235, %rs236}, %r107;
	mov.b32 	{%rs237, %rs238}, %r108;
	mov.b32 	{%rs239, %rs240}, %r109;
	// begin inline asm
	mov.u32 %r114, 0x0;
	mov.u32 %r115, 0x0;
	mov.u32 %r116, 0x0;
	mov.u32 %r117, 0x0;
	@%p11 ld.global.v4.b32 { %r114, %r115, %r116, %r117 }, [ %rd11 + 0 ];
	@!%p11 mov.u32 %r114, %r6;
	@!%p11 mov.u32 %r115, %r6;
	@!%p11 mov.u32 %r116, %r6;
	@!%p11 mov.u32 %r117, %r6;
	// end inline asm
	mov.b32 	{%rs241, %rs242}, %r114;
	mov.b32 	{%rs243, %rs244}, %r115;
	mov.b32 	{%rs245, %rs246}, %r116;
	mov.b32 	{%rs247, %rs248}, %r117;
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	@%p16 ld.global.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd12 + 0 ];
	@!%p16 mov.u32 %r122, %r6;
	@!%p16 mov.u32 %r123, %r6;
	@!%p16 mov.u32 %r124, %r6;
	@!%p16 mov.u32 %r125, %r6;
	// end inline asm
	mov.b32 	{%rs249, %rs250}, %r122;
	mov.b32 	{%rs251, %rs252}, %r123;
	mov.b32 	{%rs253, %rs254}, %r124;
	mov.b32 	{%rs255, %rs256}, %r125;
	mov.f32 	%f97, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f98, %f97, %f65;
	sub.f32 	%f99, %f97, %f66;
	sub.f32 	%f100, %f97, %f67;
	sub.f32 	%f101, %f97, %f68;
	sub.f32 	%f102, %f97, %f69;
	sub.f32 	%f103, %f97, %f70;
	sub.f32 	%f104, %f97, %f71;
	sub.f32 	%f105, %f97, %f72;
	sub.f32 	%f106, %f97, %f73;
	sub.f32 	%f107, %f97, %f74;
	sub.f32 	%f108, %f97, %f75;
	sub.f32 	%f109, %f97, %f76;
	sub.f32 	%f110, %f97, %f77;
	sub.f32 	%f111, %f97, %f78;
	sub.f32 	%f112, %f97, %f79;
	sub.f32 	%f113, %f97, %f80;
	sub.f32 	%f114, %f97, %f81;
	sub.f32 	%f115, %f97, %f82;
	sub.f32 	%f116, %f97, %f83;
	sub.f32 	%f117, %f97, %f84;
	sub.f32 	%f118, %f97, %f85;
	sub.f32 	%f119, %f97, %f86;
	sub.f32 	%f120, %f97, %f87;
	sub.f32 	%f121, %f97, %f88;
	sub.f32 	%f122, %f97, %f89;
	sub.f32 	%f123, %f97, %f90;
	sub.f32 	%f124, %f97, %f91;
	sub.f32 	%f125, %f97, %f92;
	sub.f32 	%f126, %f97, %f93;
	sub.f32 	%f127, %f97, %f94;
	sub.f32 	%f128, %f97, %f95;
	sub.f32 	%f129, %f97, %f96;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f98, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f99, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f100, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f101, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f102, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f103, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f104, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f105, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	mul.f32 	%f18, %f106, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f17, %f18;
	// end inline asm
	mul.f32 	%f20, %f107, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f19, %f20;
	// end inline asm
	mul.f32 	%f22, %f108, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f21, %f22;
	// end inline asm
	mul.f32 	%f24, %f109, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f23, %f24;
	// end inline asm
	mul.f32 	%f26, %f110, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f25, %f26;
	// end inline asm
	mul.f32 	%f28, %f111, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f27, %f28;
	// end inline asm
	mul.f32 	%f30, %f112, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f29, %f30;
	// end inline asm
	mul.f32 	%f32, %f113, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f31, %f32;
	// end inline asm
	mul.f32 	%f34, %f114, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f33, %f34;
	// end inline asm
	mul.f32 	%f36, %f115, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f35, %f36;
	// end inline asm
	mul.f32 	%f38, %f116, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f37, %f38;
	// end inline asm
	mul.f32 	%f40, %f117, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f39, %f40;
	// end inline asm
	mul.f32 	%f42, %f118, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f41, %f42;
	// end inline asm
	mul.f32 	%f44, %f119, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f43, %f44;
	// end inline asm
	mul.f32 	%f46, %f120, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f45, %f46;
	// end inline asm
	mul.f32 	%f48, %f121, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f47, %f48;
	// end inline asm
	mul.f32 	%f50, %f122, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f49, %f50;
	// end inline asm
	mul.f32 	%f52, %f123, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f51, %f52;
	// end inline asm
	mul.f32 	%f54, %f124, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f53, %f54;
	// end inline asm
	mul.f32 	%f56, %f125, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f55, %f56;
	// end inline asm
	mul.f32 	%f58, %f126, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f57, %f58;
	// end inline asm
	mul.f32 	%f60, %f127, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f59, %f60;
	// end inline asm
	mul.f32 	%f62, %f128, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f61, %f62;
	// end inline asm
	mul.f32 	%f64, %f129, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f63, %f64;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f130, %f1, 0f3F800000;
	add.f32 	%f131, %f3, 0f3F800000;
	add.f32 	%f132, %f5, 0f3F800000;
	add.f32 	%f133, %f7, 0f3F800000;
	add.f32 	%f134, %f9, 0f3F800000;
	add.f32 	%f135, %f11, 0f3F800000;
	add.f32 	%f136, %f13, 0f3F800000;
	add.f32 	%f137, %f15, 0f3F800000;
	add.f32 	%f138, %f17, 0f3F800000;
	add.f32 	%f139, %f19, 0f3F800000;
	add.f32 	%f140, %f21, 0f3F800000;
	add.f32 	%f141, %f23, 0f3F800000;
	add.f32 	%f142, %f25, 0f3F800000;
	add.f32 	%f143, %f27, 0f3F800000;
	add.f32 	%f144, %f29, 0f3F800000;
	add.f32 	%f145, %f31, 0f3F800000;
	add.f32 	%f146, %f33, 0f3F800000;
	add.f32 	%f147, %f35, 0f3F800000;
	add.f32 	%f148, %f37, 0f3F800000;
	add.f32 	%f149, %f39, 0f3F800000;
	add.f32 	%f150, %f41, 0f3F800000;
	add.f32 	%f151, %f43, 0f3F800000;
	add.f32 	%f152, %f45, 0f3F800000;
	add.f32 	%f153, %f47, 0f3F800000;
	add.f32 	%f154, %f49, 0f3F800000;
	add.f32 	%f155, %f51, 0f3F800000;
	add.f32 	%f156, %f53, 0f3F800000;
	add.f32 	%f157, %f55, 0f3F800000;
	add.f32 	%f158, %f57, 0f3F800000;
	add.f32 	%f159, %f59, 0f3F800000;
	add.f32 	%f160, %f61, 0f3F800000;
	add.f32 	%f161, %f63, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r132, %f130;
	mov.b32 	%r131, 1065353216;
	// begin inline asm
	div.full.f32 %r130, %r131, %r132;
	// end inline asm
	mov.b32 	%f162, %r130;
	mov.b32 	%r135, %f131;
	// begin inline asm
	div.full.f32 %r133, %r131, %r135;
	// end inline asm
	mov.b32 	%f163, %r133;
	mov.b32 	%r138, %f132;
	// begin inline asm
	div.full.f32 %r136, %r131, %r138;
	// end inline asm
	mov.b32 	%f164, %r136;
	mov.b32 	%r141, %f133;
	// begin inline asm
	div.full.f32 %r139, %r131, %r141;
	// end inline asm
	mov.b32 	%f165, %r139;
	mov.b32 	%r144, %f134;
	// begin inline asm
	div.full.f32 %r142, %r131, %r144;
	// end inline asm
	mov.b32 	%f166, %r142;
	mov.b32 	%r147, %f135;
	// begin inline asm
	div.full.f32 %r145, %r131, %r147;
	// end inline asm
	mov.b32 	%f167, %r145;
	mov.b32 	%r150, %f136;
	// begin inline asm
	div.full.f32 %r148, %r131, %r150;
	// end inline asm
	mov.b32 	%f168, %r148;
	mov.b32 	%r153, %f137;
	// begin inline asm
	div.full.f32 %r151, %r131, %r153;
	// end inline asm
	mov.b32 	%f169, %r151;
	mov.b32 	%r156, %f138;
	// begin inline asm
	div.full.f32 %r154, %r131, %r156;
	// end inline asm
	mov.b32 	%f170, %r154;
	mov.b32 	%r159, %f139;
	// begin inline asm
	div.full.f32 %r157, %r131, %r159;
	// end inline asm
	mov.b32 	%f171, %r157;
	mov.b32 	%r162, %f140;
	// begin inline asm
	div.full.f32 %r160, %r131, %r162;
	// end inline asm
	mov.b32 	%f172, %r160;
	mov.b32 	%r165, %f141;
	// begin inline asm
	div.full.f32 %r163, %r131, %r165;
	// end inline asm
	mov.b32 	%f173, %r163;
	mov.b32 	%r168, %f142;
	// begin inline asm
	div.full.f32 %r166, %r131, %r168;
	// end inline asm
	mov.b32 	%f174, %r166;
	mov.b32 	%r171, %f143;
	// begin inline asm
	div.full.f32 %r169, %r131, %r171;
	// end inline asm
	mov.b32 	%f175, %r169;
	mov.b32 	%r174, %f144;
	// begin inline asm
	div.full.f32 %r172, %r131, %r174;
	// end inline asm
	mov.b32 	%f176, %r172;
	mov.b32 	%r177, %f145;
	// begin inline asm
	div.full.f32 %r175, %r131, %r177;
	// end inline asm
	mov.b32 	%f177, %r175;
	mov.b32 	%r180, %f146;
	// begin inline asm
	div.full.f32 %r178, %r131, %r180;
	// end inline asm
	mov.b32 	%f178, %r178;
	mov.b32 	%r183, %f147;
	// begin inline asm
	div.full.f32 %r181, %r131, %r183;
	// end inline asm
	mov.b32 	%f179, %r181;
	mov.b32 	%r186, %f148;
	// begin inline asm
	div.full.f32 %r184, %r131, %r186;
	// end inline asm
	mov.b32 	%f180, %r184;
	mov.b32 	%r189, %f149;
	// begin inline asm
	div.full.f32 %r187, %r131, %r189;
	// end inline asm
	mov.b32 	%f181, %r187;
	mov.b32 	%r192, %f150;
	// begin inline asm
	div.full.f32 %r190, %r131, %r192;
	// end inline asm
	mov.b32 	%f182, %r190;
	mov.b32 	%r195, %f151;
	// begin inline asm
	div.full.f32 %r193, %r131, %r195;
	// end inline asm
	mov.b32 	%f183, %r193;
	mov.b32 	%r198, %f152;
	// begin inline asm
	div.full.f32 %r196, %r131, %r198;
	// end inline asm
	mov.b32 	%f184, %r196;
	mov.b32 	%r201, %f153;
	// begin inline asm
	div.full.f32 %r199, %r131, %r201;
	// end inline asm
	mov.b32 	%f185, %r199;
	mov.b32 	%r204, %f154;
	// begin inline asm
	div.full.f32 %r202, %r131, %r204;
	// end inline asm
	mov.b32 	%f186, %r202;
	mov.b32 	%r207, %f155;
	// begin inline asm
	div.full.f32 %r205, %r131, %r207;
	// end inline asm
	mov.b32 	%f187, %r205;
	mov.b32 	%r210, %f156;
	// begin inline asm
	div.full.f32 %r208, %r131, %r210;
	// end inline asm
	mov.b32 	%f188, %r208;
	mov.b32 	%r213, %f157;
	// begin inline asm
	div.full.f32 %r211, %r131, %r213;
	// end inline asm
	mov.b32 	%f189, %r211;
	mov.b32 	%r216, %f158;
	// begin inline asm
	div.full.f32 %r214, %r131, %r216;
	// end inline asm
	mov.b32 	%f190, %r214;
	mov.b32 	%r219, %f159;
	// begin inline asm
	div.full.f32 %r217, %r131, %r219;
	// end inline asm
	mov.b32 	%f191, %r217;
	mov.b32 	%r222, %f160;
	// begin inline asm
	div.full.f32 %r220, %r131, %r222;
	// end inline asm
	mov.b32 	%f192, %r220;
	mov.b32 	%r225, %f161;
	// begin inline asm
	div.full.f32 %r223, %r131, %r225;
	// end inline asm
	mov.b32 	%f193, %r223;
$L__tmp2:
	.loc	1 52 21                         // swiglu.py:52:21
	mul.f32 	%f194, %f65, %f162;
	mul.f32 	%f195, %f66, %f163;
	mul.f32 	%f196, %f67, %f164;
	mul.f32 	%f197, %f68, %f165;
	mul.f32 	%f198, %f69, %f166;
	mul.f32 	%f199, %f70, %f167;
	mul.f32 	%f200, %f71, %f168;
	mul.f32 	%f201, %f72, %f169;
	mul.f32 	%f202, %f73, %f170;
	mul.f32 	%f203, %f74, %f171;
	mul.f32 	%f204, %f75, %f172;
	mul.f32 	%f205, %f76, %f173;
	mul.f32 	%f206, %f77, %f174;
	mul.f32 	%f207, %f78, %f175;
	mul.f32 	%f208, %f79, %f176;
	mul.f32 	%f209, %f80, %f177;
	mul.f32 	%f210, %f81, %f178;
	mul.f32 	%f211, %f82, %f179;
	mul.f32 	%f212, %f83, %f180;
	mul.f32 	%f213, %f84, %f181;
	mul.f32 	%f214, %f85, %f182;
	mul.f32 	%f215, %f86, %f183;
	mul.f32 	%f216, %f87, %f184;
	mul.f32 	%f217, %f88, %f185;
	mul.f32 	%f218, %f89, %f186;
	mul.f32 	%f219, %f90, %f187;
	mul.f32 	%f220, %f91, %f188;
	mul.f32 	%f221, %f92, %f189;
	mul.f32 	%f222, %f93, %f190;
	mul.f32 	%f223, %f94, %f191;
	mul.f32 	%f224, %f95, %f192;
	mul.f32 	%f225, %f96, %f193;
	.loc	1 53 22                         // swiglu.py:53:22
	// begin inline asm
	cvt.f32.bf16 %r226, %rs161;
	// end inline asm
	mov.b32 	%f226, %r226;
	// begin inline asm
	cvt.f32.bf16 %r227, %rs162;
	// end inline asm
	mov.b32 	%f227, %r227;
	// begin inline asm
	cvt.f32.bf16 %r228, %rs163;
	// end inline asm
	mov.b32 	%f228, %r228;
	// begin inline asm
	cvt.f32.bf16 %r229, %rs164;
	// end inline asm
	mov.b32 	%f229, %r229;
	// begin inline asm
	cvt.f32.bf16 %r230, %rs165;
	// end inline asm
	mov.b32 	%f230, %r230;
	// begin inline asm
	cvt.f32.bf16 %r231, %rs166;
	// end inline asm
	mov.b32 	%f231, %r231;
	// begin inline asm
	cvt.f32.bf16 %r232, %rs167;
	// end inline asm
	mov.b32 	%f232, %r232;
	// begin inline asm
	cvt.f32.bf16 %r233, %rs168;
	// end inline asm
	mov.b32 	%f233, %r233;
	// begin inline asm
	cvt.f32.bf16 %r234, %rs169;
	// end inline asm
	mov.b32 	%f234, %r234;
	// begin inline asm
	cvt.f32.bf16 %r235, %rs170;
	// end inline asm
	mov.b32 	%f235, %r235;
	// begin inline asm
	cvt.f32.bf16 %r236, %rs171;
	// end inline asm
	mov.b32 	%f236, %r236;
	// begin inline asm
	cvt.f32.bf16 %r237, %rs172;
	// end inline asm
	mov.b32 	%f237, %r237;
	// begin inline asm
	cvt.f32.bf16 %r238, %rs173;
	// end inline asm
	mov.b32 	%f238, %r238;
	// begin inline asm
	cvt.f32.bf16 %r239, %rs174;
	// end inline asm
	mov.b32 	%f239, %r239;
	// begin inline asm
	cvt.f32.bf16 %r240, %rs175;
	// end inline asm
	mov.b32 	%f240, %r240;
	// begin inline asm
	cvt.f32.bf16 %r241, %rs176;
	// end inline asm
	mov.b32 	%f241, %r241;
	// begin inline asm
	cvt.f32.bf16 %r242, %rs177;
	// end inline asm
	mov.b32 	%f242, %r242;
	// begin inline asm
	cvt.f32.bf16 %r243, %rs178;
	// end inline asm
	mov.b32 	%f243, %r243;
	// begin inline asm
	cvt.f32.bf16 %r244, %rs179;
	// end inline asm
	mov.b32 	%f244, %r244;
	// begin inline asm
	cvt.f32.bf16 %r245, %rs180;
	// end inline asm
	mov.b32 	%f245, %r245;
	// begin inline asm
	cvt.f32.bf16 %r246, %rs181;
	// end inline asm
	mov.b32 	%f246, %r246;
	// begin inline asm
	cvt.f32.bf16 %r247, %rs182;
	// end inline asm
	mov.b32 	%f247, %r247;
	// begin inline asm
	cvt.f32.bf16 %r248, %rs183;
	// end inline asm
	mov.b32 	%f248, %r248;
	// begin inline asm
	cvt.f32.bf16 %r249, %rs184;
	// end inline asm
	mov.b32 	%f249, %r249;
	// begin inline asm
	cvt.f32.bf16 %r250, %rs185;
	// end inline asm
	mov.b32 	%f250, %r250;
	// begin inline asm
	cvt.f32.bf16 %r251, %rs186;
	// end inline asm
	mov.b32 	%f251, %r251;
	// begin inline asm
	cvt.f32.bf16 %r252, %rs187;
	// end inline asm
	mov.b32 	%f252, %r252;
	// begin inline asm
	cvt.f32.bf16 %r253, %rs188;
	// end inline asm
	mov.b32 	%f253, %r253;
	// begin inline asm
	cvt.f32.bf16 %r254, %rs189;
	// end inline asm
	mov.b32 	%f254, %r254;
	// begin inline asm
	cvt.f32.bf16 %r255, %rs190;
	// end inline asm
	mov.b32 	%f255, %r255;
	// begin inline asm
	cvt.f32.bf16 %r256, %rs191;
	// end inline asm
	mov.b32 	%f256, %r256;
	// begin inline asm
	cvt.f32.bf16 %r257, %rs192;
	// end inline asm
	mov.b32 	%f257, %r257;
	mul.f32 	%f258, %f194, %f226;
	mul.f32 	%f259, %f195, %f227;
	mul.f32 	%f260, %f196, %f228;
	mul.f32 	%f261, %f197, %f229;
	mul.f32 	%f262, %f198, %f230;
	mul.f32 	%f263, %f199, %f231;
	mul.f32 	%f264, %f200, %f232;
	mul.f32 	%f265, %f201, %f233;
	mul.f32 	%f266, %f202, %f234;
	mul.f32 	%f267, %f203, %f235;
	mul.f32 	%f268, %f204, %f236;
	mul.f32 	%f269, %f205, %f237;
	mul.f32 	%f270, %f206, %f238;
	mul.f32 	%f271, %f207, %f239;
	mul.f32 	%f272, %f208, %f240;
	mul.f32 	%f273, %f209, %f241;
	mul.f32 	%f274, %f210, %f242;
	mul.f32 	%f275, %f211, %f243;
	mul.f32 	%f276, %f212, %f244;
	mul.f32 	%f277, %f213, %f245;
	mul.f32 	%f278, %f214, %f246;
	mul.f32 	%f279, %f215, %f247;
	mul.f32 	%f280, %f216, %f248;
	mul.f32 	%f281, %f217, %f249;
	mul.f32 	%f282, %f218, %f250;
	mul.f32 	%f283, %f219, %f251;
	mul.f32 	%f284, %f220, %f252;
	mul.f32 	%f285, %f221, %f253;
	mul.f32 	%f286, %f222, %f254;
	mul.f32 	%f287, %f223, %f255;
	mul.f32 	%f288, %f224, %f256;
	mul.f32 	%f289, %f225, %f257;
	mov.f32 	%f290, 0f3F800000;
	.loc	1 54 37                         // swiglu.py:54:37
	sub.f32 	%f291, %f290, %f162;
	sub.f32 	%f292, %f290, %f163;
	sub.f32 	%f293, %f290, %f164;
	sub.f32 	%f294, %f290, %f165;
	sub.f32 	%f295, %f290, %f166;
	sub.f32 	%f296, %f290, %f167;
	sub.f32 	%f297, %f290, %f168;
	sub.f32 	%f298, %f290, %f169;
	sub.f32 	%f299, %f290, %f170;
	sub.f32 	%f300, %f290, %f171;
	sub.f32 	%f301, %f290, %f172;
	sub.f32 	%f302, %f290, %f173;
	sub.f32 	%f303, %f290, %f174;
	sub.f32 	%f304, %f290, %f175;
	sub.f32 	%f305, %f290, %f176;
	sub.f32 	%f306, %f290, %f177;
	sub.f32 	%f307, %f290, %f178;
	sub.f32 	%f308, %f290, %f179;
	sub.f32 	%f309, %f290, %f180;
	sub.f32 	%f310, %f290, %f181;
	sub.f32 	%f311, %f290, %f182;
	sub.f32 	%f312, %f290, %f183;
	sub.f32 	%f313, %f290, %f184;
	sub.f32 	%f314, %f290, %f185;
	sub.f32 	%f315, %f290, %f186;
	sub.f32 	%f316, %f290, %f187;
	sub.f32 	%f317, %f290, %f188;
	sub.f32 	%f318, %f290, %f189;
	sub.f32 	%f319, %f290, %f190;
	sub.f32 	%f320, %f290, %f191;
	sub.f32 	%f321, %f290, %f192;
	sub.f32 	%f322, %f290, %f193;
	.loc	1 54 46                         // swiglu.py:54:46
	fma.rn.f32 	%f323, %f194, %f291, %f162;
	fma.rn.f32 	%f324, %f195, %f292, %f163;
	fma.rn.f32 	%f325, %f196, %f293, %f164;
	fma.rn.f32 	%f326, %f197, %f294, %f165;
	fma.rn.f32 	%f327, %f198, %f295, %f166;
	fma.rn.f32 	%f328, %f199, %f296, %f167;
	fma.rn.f32 	%f329, %f200, %f297, %f168;
	fma.rn.f32 	%f330, %f201, %f298, %f169;
	fma.rn.f32 	%f331, %f202, %f299, %f170;
	fma.rn.f32 	%f332, %f203, %f300, %f171;
	fma.rn.f32 	%f333, %f204, %f301, %f172;
	fma.rn.f32 	%f334, %f205, %f302, %f173;
	fma.rn.f32 	%f335, %f206, %f303, %f174;
	fma.rn.f32 	%f336, %f207, %f304, %f175;
	fma.rn.f32 	%f337, %f208, %f305, %f176;
	fma.rn.f32 	%f338, %f209, %f306, %f177;
	fma.rn.f32 	%f339, %f210, %f307, %f178;
	fma.rn.f32 	%f340, %f211, %f308, %f179;
	fma.rn.f32 	%f341, %f212, %f309, %f180;
	fma.rn.f32 	%f342, %f213, %f310, %f181;
	fma.rn.f32 	%f343, %f214, %f311, %f182;
	fma.rn.f32 	%f344, %f215, %f312, %f183;
	fma.rn.f32 	%f345, %f216, %f313, %f184;
	fma.rn.f32 	%f346, %f217, %f314, %f185;
	fma.rn.f32 	%f347, %f218, %f315, %f186;
	fma.rn.f32 	%f348, %f219, %f316, %f187;
	fma.rn.f32 	%f349, %f220, %f317, %f188;
	fma.rn.f32 	%f350, %f221, %f318, %f189;
	fma.rn.f32 	%f351, %f222, %f319, %f190;
	fma.rn.f32 	%f352, %f223, %f320, %f191;
	fma.rn.f32 	%f353, %f224, %f321, %f192;
	fma.rn.f32 	%f354, %f225, %f322, %f193;
	.loc	1 54 23                         // swiglu.py:54:23
	mul.f32 	%f355, %f323, %f226;
	mul.f32 	%f356, %f324, %f227;
	mul.f32 	%f357, %f325, %f228;
	mul.f32 	%f358, %f326, %f229;
	mul.f32 	%f359, %f327, %f230;
	mul.f32 	%f360, %f328, %f231;
	mul.f32 	%f361, %f329, %f232;
	mul.f32 	%f362, %f330, %f233;
	mul.f32 	%f363, %f331, %f234;
	mul.f32 	%f364, %f332, %f235;
	mul.f32 	%f365, %f333, %f236;
	mul.f32 	%f366, %f334, %f237;
	mul.f32 	%f367, %f335, %f238;
	mul.f32 	%f368, %f336, %f239;
	mul.f32 	%f369, %f337, %f240;
	mul.f32 	%f370, %f338, %f241;
	mul.f32 	%f371, %f339, %f242;
	mul.f32 	%f372, %f340, %f243;
	mul.f32 	%f373, %f341, %f244;
	mul.f32 	%f374, %f342, %f245;
	mul.f32 	%f375, %f343, %f246;
	mul.f32 	%f376, %f344, %f247;
	mul.f32 	%f377, %f345, %f248;
	mul.f32 	%f378, %f346, %f249;
	mul.f32 	%f379, %f347, %f250;
	mul.f32 	%f380, %f348, %f251;
	mul.f32 	%f381, %f349, %f252;
	mul.f32 	%f382, %f350, %f253;
	mul.f32 	%f383, %f351, %f254;
	mul.f32 	%f384, %f352, %f255;
	mul.f32 	%f385, %f353, %f256;
	mul.f32 	%f386, %f354, %f257;
	.loc	1 54 55                         // swiglu.py:54:55
	// begin inline asm
	cvt.f32.bf16 %r258, %rs225;
	// end inline asm
	mov.b32 	%f387, %r258;
	// begin inline asm
	cvt.f32.bf16 %r259, %rs226;
	// end inline asm
	mov.b32 	%f388, %r259;
	// begin inline asm
	cvt.f32.bf16 %r260, %rs227;
	// end inline asm
	mov.b32 	%f389, %r260;
	// begin inline asm
	cvt.f32.bf16 %r261, %rs228;
	// end inline asm
	mov.b32 	%f390, %r261;
	// begin inline asm
	cvt.f32.bf16 %r262, %rs229;
	// end inline asm
	mov.b32 	%f391, %r262;
	// begin inline asm
	cvt.f32.bf16 %r263, %rs230;
	// end inline asm
	mov.b32 	%f392, %r263;
	// begin inline asm
	cvt.f32.bf16 %r264, %rs231;
	// end inline asm
	mov.b32 	%f393, %r264;
	// begin inline asm
	cvt.f32.bf16 %r265, %rs232;
	// end inline asm
	mov.b32 	%f394, %r265;
	// begin inline asm
	cvt.f32.bf16 %r266, %rs233;
	// end inline asm
	mov.b32 	%f395, %r266;
	// begin inline asm
	cvt.f32.bf16 %r267, %rs234;
	// end inline asm
	mov.b32 	%f396, %r267;
	// begin inline asm
	cvt.f32.bf16 %r268, %rs235;
	// end inline asm
	mov.b32 	%f397, %r268;
	// begin inline asm
	cvt.f32.bf16 %r269, %rs236;
	// end inline asm
	mov.b32 	%f398, %r269;
	// begin inline asm
	cvt.f32.bf16 %r270, %rs237;
	// end inline asm
	mov.b32 	%f399, %r270;
	// begin inline asm
	cvt.f32.bf16 %r271, %rs238;
	// end inline asm
	mov.b32 	%f400, %r271;
	// begin inline asm
	cvt.f32.bf16 %r272, %rs239;
	// end inline asm
	mov.b32 	%f401, %r272;
	// begin inline asm
	cvt.f32.bf16 %r273, %rs240;
	// end inline asm
	mov.b32 	%f402, %r273;
	// begin inline asm
	cvt.f32.bf16 %r274, %rs241;
	// end inline asm
	mov.b32 	%f403, %r274;
	// begin inline asm
	cvt.f32.bf16 %r275, %rs242;
	// end inline asm
	mov.b32 	%f404, %r275;
	// begin inline asm
	cvt.f32.bf16 %r276, %rs243;
	// end inline asm
	mov.b32 	%f405, %r276;
	// begin inline asm
	cvt.f32.bf16 %r277, %rs244;
	// end inline asm
	mov.b32 	%f406, %r277;
	// begin inline asm
	cvt.f32.bf16 %r278, %rs245;
	// end inline asm
	mov.b32 	%f407, %r278;
	// begin inline asm
	cvt.f32.bf16 %r279, %rs246;
	// end inline asm
	mov.b32 	%f408, %r279;
	// begin inline asm
	cvt.f32.bf16 %r280, %rs247;
	// end inline asm
	mov.b32 	%f409, %r280;
	// begin inline asm
	cvt.f32.bf16 %r281, %rs248;
	// end inline asm
	mov.b32 	%f410, %r281;
	// begin inline asm
	cvt.f32.bf16 %r282, %rs249;
	// end inline asm
	mov.b32 	%f411, %r282;
	// begin inline asm
	cvt.f32.bf16 %r283, %rs250;
	// end inline asm
	mov.b32 	%f412, %r283;
	// begin inline asm
	cvt.f32.bf16 %r284, %rs251;
	// end inline asm
	mov.b32 	%f413, %r284;
	// begin inline asm
	cvt.f32.bf16 %r285, %rs252;
	// end inline asm
	mov.b32 	%f414, %r285;
	// begin inline asm
	cvt.f32.bf16 %r286, %rs253;
	// end inline asm
	mov.b32 	%f415, %r286;
	// begin inline asm
	cvt.f32.bf16 %r287, %rs254;
	// end inline asm
	mov.b32 	%f416, %r287;
	// begin inline asm
	cvt.f32.bf16 %r288, %rs255;
	// end inline asm
	mov.b32 	%f417, %r288;
	// begin inline asm
	cvt.f32.bf16 %r289, %rs256;
	// end inline asm
	mov.b32 	%f418, %r289;
	mul.f32 	%f419, %f355, %f387;
	mul.f32 	%f420, %f356, %f388;
	mul.f32 	%f421, %f357, %f389;
	mul.f32 	%f422, %f358, %f390;
	mul.f32 	%f423, %f359, %f391;
	mul.f32 	%f424, %f360, %f392;
	mul.f32 	%f425, %f361, %f393;
	mul.f32 	%f426, %f362, %f394;
	mul.f32 	%f427, %f363, %f395;
	mul.f32 	%f428, %f364, %f396;
	mul.f32 	%f429, %f365, %f397;
	mul.f32 	%f430, %f366, %f398;
	mul.f32 	%f431, %f367, %f399;
	mul.f32 	%f432, %f368, %f400;
	mul.f32 	%f433, %f369, %f401;
	mul.f32 	%f434, %f370, %f402;
	mul.f32 	%f435, %f371, %f403;
	mul.f32 	%f436, %f372, %f404;
	mul.f32 	%f437, %f373, %f405;
	mul.f32 	%f438, %f374, %f406;
	mul.f32 	%f439, %f375, %f407;
	mul.f32 	%f440, %f376, %f408;
	mul.f32 	%f441, %f377, %f409;
	mul.f32 	%f442, %f378, %f410;
	mul.f32 	%f443, %f379, %f411;
	mul.f32 	%f444, %f380, %f412;
	mul.f32 	%f445, %f381, %f413;
	mul.f32 	%f446, %f382, %f414;
	mul.f32 	%f447, %f383, %f415;
	mul.f32 	%f448, %f384, %f416;
	mul.f32 	%f449, %f385, %f417;
	mul.f32 	%f450, %f386, %f418;
	.loc	1 56 34                         // swiglu.py:56:34
	mov.b32 	%r290, %f419;
	// begin inline asm
	cvt.rn.bf16.f32 %rs97, %r290;
	// end inline asm
	mov.b32 	%r291, %f420;
	// begin inline asm
	cvt.rn.bf16.f32 %rs98, %r291;
	// end inline asm
	mov.b32 	%r292, %f421;
	// begin inline asm
	cvt.rn.bf16.f32 %rs99, %r292;
	// end inline asm
	mov.b32 	%r293, %f422;
	// begin inline asm
	cvt.rn.bf16.f32 %rs100, %r293;
	// end inline asm
	mov.b32 	%r294, %f423;
	// begin inline asm
	cvt.rn.bf16.f32 %rs101, %r294;
	// end inline asm
	mov.b32 	%r295, %f424;
	// begin inline asm
	cvt.rn.bf16.f32 %rs102, %r295;
	// end inline asm
	mov.b32 	%r296, %f425;
	// begin inline asm
	cvt.rn.bf16.f32 %rs103, %r296;
	// end inline asm
	mov.b32 	%r297, %f426;
	// begin inline asm
	cvt.rn.bf16.f32 %rs104, %r297;
	// end inline asm
	mov.b32 	%r298, %f427;
	// begin inline asm
	cvt.rn.bf16.f32 %rs105, %r298;
	// end inline asm
	mov.b32 	%r299, %f428;
	// begin inline asm
	cvt.rn.bf16.f32 %rs106, %r299;
	// end inline asm
	mov.b32 	%r300, %f429;
	// begin inline asm
	cvt.rn.bf16.f32 %rs107, %r300;
	// end inline asm
	mov.b32 	%r301, %f430;
	// begin inline asm
	cvt.rn.bf16.f32 %rs108, %r301;
	// end inline asm
	mov.b32 	%r302, %f431;
	// begin inline asm
	cvt.rn.bf16.f32 %rs109, %r302;
	// end inline asm
	mov.b32 	%r303, %f432;
	// begin inline asm
	cvt.rn.bf16.f32 %rs110, %r303;
	// end inline asm
	mov.b32 	%r304, %f433;
	// begin inline asm
	cvt.rn.bf16.f32 %rs111, %r304;
	// end inline asm
	mov.b32 	%r305, %f434;
	// begin inline asm
	cvt.rn.bf16.f32 %rs112, %r305;
	// end inline asm
	mov.b32 	%r306, %f435;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r306;
	// end inline asm
	mov.b32 	%r307, %f436;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r307;
	// end inline asm
	mov.b32 	%r308, %f437;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r308;
	// end inline asm
	mov.b32 	%r309, %f438;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r309;
	// end inline asm
	mov.b32 	%r310, %f439;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r310;
	// end inline asm
	mov.b32 	%r311, %f440;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r311;
	// end inline asm
	mov.b32 	%r312, %f441;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r312;
	// end inline asm
	mov.b32 	%r313, %f442;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r313;
	// end inline asm
	mov.b32 	%r314, %f443;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r314;
	// end inline asm
	mov.b32 	%r315, %f444;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r315;
	// end inline asm
	mov.b32 	%r316, %f445;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r316;
	// end inline asm
	mov.b32 	%r317, %f446;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r317;
	// end inline asm
	mov.b32 	%r318, %f447;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r318;
	// end inline asm
	mov.b32 	%r319, %f448;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r319;
	// end inline asm
	mov.b32 	%r320, %f449;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r320;
	// end inline asm
	mov.b32 	%r321, %f450;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r321;
	// end inline asm
	mov.b32 	%r439, {%rs97, %rs98};
	mov.b32 	%r440, {%rs99, %rs100};
	mov.b32 	%r441, {%rs101, %rs102};
	mov.b32 	%r442, {%rs103, %rs104};
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r439, %r440, %r441, %r442 };
	// end inline asm
	mov.b32 	%r443, {%rs105, %rs106};
	mov.b32 	%r444, {%rs107, %rs108};
	mov.b32 	%r445, {%rs109, %rs110};
	mov.b32 	%r446, {%rs111, %rs112};
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r443, %r444, %r445, %r446 };
	// end inline asm
	mov.b32 	%r447, {%rs113, %rs114};
	mov.b32 	%r448, {%rs115, %rs116};
	mov.b32 	%r449, {%rs117, %rs118};
	mov.b32 	%r450, {%rs119, %rs120};
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd7 + 0 ], { %r447, %r448, %r449, %r450 };
	// end inline asm
	mov.b32 	%r451, {%rs121, %rs122};
	mov.b32 	%r452, {%rs123, %rs124};
	mov.b32 	%r453, {%rs125, %rs126};
	mov.b32 	%r454, {%rs127, %rs128};
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd8 + 0 ], { %r451, %r452, %r453, %r454 };
	// end inline asm
	.loc	1 57 34                         // swiglu.py:57:34
	mov.b32 	%r338, %f258;
	// begin inline asm
	cvt.rn.bf16.f32 %rs129, %r338;
	// end inline asm
	mov.b32 	%r339, %f259;
	// begin inline asm
	cvt.rn.bf16.f32 %rs130, %r339;
	// end inline asm
	mov.b32 	%r340, %f260;
	// begin inline asm
	cvt.rn.bf16.f32 %rs131, %r340;
	// end inline asm
	mov.b32 	%r341, %f261;
	// begin inline asm
	cvt.rn.bf16.f32 %rs132, %r341;
	// end inline asm
	mov.b32 	%r342, %f262;
	// begin inline asm
	cvt.rn.bf16.f32 %rs133, %r342;
	// end inline asm
	mov.b32 	%r343, %f263;
	// begin inline asm
	cvt.rn.bf16.f32 %rs134, %r343;
	// end inline asm
	mov.b32 	%r344, %f264;
	// begin inline asm
	cvt.rn.bf16.f32 %rs135, %r344;
	// end inline asm
	mov.b32 	%r345, %f265;
	// begin inline asm
	cvt.rn.bf16.f32 %rs136, %r345;
	// end inline asm
	mov.b32 	%r346, %f266;
	// begin inline asm
	cvt.rn.bf16.f32 %rs137, %r346;
	// end inline asm
	mov.b32 	%r347, %f267;
	// begin inline asm
	cvt.rn.bf16.f32 %rs138, %r347;
	// end inline asm
	mov.b32 	%r348, %f268;
	// begin inline asm
	cvt.rn.bf16.f32 %rs139, %r348;
	// end inline asm
	mov.b32 	%r349, %f269;
	// begin inline asm
	cvt.rn.bf16.f32 %rs140, %r349;
	// end inline asm
	mov.b32 	%r350, %f270;
	// begin inline asm
	cvt.rn.bf16.f32 %rs141, %r350;
	// end inline asm
	mov.b32 	%r351, %f271;
	// begin inline asm
	cvt.rn.bf16.f32 %rs142, %r351;
	// end inline asm
	mov.b32 	%r352, %f272;
	// begin inline asm
	cvt.rn.bf16.f32 %rs143, %r352;
	// end inline asm
	mov.b32 	%r353, %f273;
	// begin inline asm
	cvt.rn.bf16.f32 %rs144, %r353;
	// end inline asm
	mov.b32 	%r354, %f274;
	// begin inline asm
	cvt.rn.bf16.f32 %rs145, %r354;
	// end inline asm
	mov.b32 	%r355, %f275;
	// begin inline asm
	cvt.rn.bf16.f32 %rs146, %r355;
	// end inline asm
	mov.b32 	%r356, %f276;
	// begin inline asm
	cvt.rn.bf16.f32 %rs147, %r356;
	// end inline asm
	mov.b32 	%r357, %f277;
	// begin inline asm
	cvt.rn.bf16.f32 %rs148, %r357;
	// end inline asm
	mov.b32 	%r358, %f278;
	// begin inline asm
	cvt.rn.bf16.f32 %rs149, %r358;
	// end inline asm
	mov.b32 	%r359, %f279;
	// begin inline asm
	cvt.rn.bf16.f32 %rs150, %r359;
	// end inline asm
	mov.b32 	%r360, %f280;
	// begin inline asm
	cvt.rn.bf16.f32 %rs151, %r360;
	// end inline asm
	mov.b32 	%r361, %f281;
	// begin inline asm
	cvt.rn.bf16.f32 %rs152, %r361;
	// end inline asm
	mov.b32 	%r362, %f282;
	// begin inline asm
	cvt.rn.bf16.f32 %rs153, %r362;
	// end inline asm
	mov.b32 	%r363, %f283;
	// begin inline asm
	cvt.rn.bf16.f32 %rs154, %r363;
	// end inline asm
	mov.b32 	%r364, %f284;
	// begin inline asm
	cvt.rn.bf16.f32 %rs155, %r364;
	// end inline asm
	mov.b32 	%r365, %f285;
	// begin inline asm
	cvt.rn.bf16.f32 %rs156, %r365;
	// end inline asm
	mov.b32 	%r366, %f286;
	// begin inline asm
	cvt.rn.bf16.f32 %rs157, %r366;
	// end inline asm
	mov.b32 	%r367, %f287;
	// begin inline asm
	cvt.rn.bf16.f32 %rs158, %r367;
	// end inline asm
	mov.b32 	%r368, %f288;
	// begin inline asm
	cvt.rn.bf16.f32 %rs159, %r368;
	// end inline asm
	mov.b32 	%r369, %f289;
	// begin inline asm
	cvt.rn.bf16.f32 %rs160, %r369;
	// end inline asm
	mov.b32 	%r455, {%rs129, %rs130};
	mov.b32 	%r456, {%rs131, %rs132};
	mov.b32 	%r457, {%rs133, %rs134};
	mov.b32 	%r458, {%rs135, %rs136};
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd9 + 0 ], { %r455, %r456, %r457, %r458 };
	// end inline asm
	mov.b32 	%r459, {%rs137, %rs138};
	mov.b32 	%r460, {%rs139, %rs140};
	mov.b32 	%r461, {%rs141, %rs142};
	mov.b32 	%r462, {%rs143, %rs144};
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r459, %r460, %r461, %r462 };
	// end inline asm
	mov.b32 	%r463, {%rs145, %rs146};
	mov.b32 	%r464, {%rs147, %rs148};
	mov.b32 	%r465, {%rs149, %rs150};
	mov.b32 	%r466, {%rs151, %rs152};
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd11 + 0 ], { %r463, %r464, %r465, %r466 };
	// end inline asm
	mov.b32 	%r467, {%rs153, %rs154};
	mov.b32 	%r468, {%rs155, %rs156};
	mov.b32 	%r469, {%rs157, %rs158};
	mov.b32 	%r470, {%rs159, %rs160};
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd12 + 0 ], { %r467, %r468, %r469, %r470 };
	// end inline asm
	.loc	1 57 4                          // swiglu.py:57:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/root/miniconda3/lib/python3.12/site-packages/liger_kernel/ops/swiglu.py"
	.file	2 "/root/miniconda3/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 167                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 115                                 // DW_AT_name
.b8 119
.b8 105
.b8 103
.b8 108
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 50
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 108
.b8 105
.b8 103
.b8 101
.b8 114
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 47
.b8 111
.b8 112
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x1a DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 115
.b8 119
.b8 105
.b8 103
.b8 108
.b8 117
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
